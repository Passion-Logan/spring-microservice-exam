<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <parent>
        <groupId>com.github.tangyi</groupId>
        <artifactId>auth-service-parent</artifactId>
        <version>${revision}</version>
    </parent>
    <artifactId>auth-service</artifactId>
    <name>${project.artifactId}</name>
    <description>认证服务</description>

    <dependencies>
        <!-- common-core -->
        <dependency>
            <groupId>com.github.tangyi</groupId>
            <artifactId>common-core</artifactId>
        </dependency>

        <!-- common-config -->
        <dependency>
            <groupId>com.github.tangyi</groupId>
            <artifactId>common-config</artifactId>
        </dependency>

        <!-- common-security -->
        <dependency>
            <groupId>com.github.tangyi</groupId>
            <artifactId>common-security</artifactId>
        </dependency>

        <!-- common-log -->
        <dependency>
            <groupId>com.github.tangyi</groupId>
            <artifactId>common-log</artifactId>
        </dependency>

        <!-- user-service-api -->
        <dependency>
            <groupId>com.github.tangyi</groupId>
            <artifactId>user-service-api</artifactId>
        </dependency>

        <!-- auth-service-api -->
        <dependency>
            <groupId>com.github.tangyi</groupId>
            <artifactId>auth-service-api</artifactId>
        </dependency>

        <!-- exam-service-api -->
        <dependency>
            <groupId>com.github.tangyi</groupId>
            <artifactId>exam-service-api</artifactId>
        </dependency>

        <!-- web 服务 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- 配置客户端 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-client</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security.oauth.boot</groupId>
            <artifactId>spring-security-oauth2-autoconfigure</artifactId>
        </dependency>

        <!-- 管理中心插件 -->
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
        </dependency>

        <!--MySQL-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <!-- mybatis -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
        </dependency>

        <!-- 微信小程序 -->
        <dependency>
            <groupId>com.github.binarywang</groupId>
            <artifactId>weixin-java-miniapp</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <finalName>${project.name}</finalName>
                </configuration>
            </plugin>
            <!-- 打包时跳过test插件，不运行test测试用例 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <!-- docker的maven插件 -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${docker.maven.verion}</version>
                <executions>
                    <!--执行 mvn package 时 自动构建docker镜像并推送到仓库 -->
                    <execution>
                        <id>default</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <repository>${docker.registry}/${docker.namespace}/${project.artifactId}</repository>
                    <tag>latest</tag>
                    <!-- 构建参数，指定jar包名称 -->
                    <buildArgs>
                        <JAR_FILE>${project.name}.jar</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>